Лекция 5

Возможность управления вводом/выводом обеспечивают форматирующие функции, челны, флаги и манипуляторы.


Cout.fill(‘symbol’);-устнавливает символ заполнитель
Cout.width(‘ ширина поля’);
Cout.precision('количество знаков');

Флаги.
Подключение флага
Cout.setf(ios::/*имя флага*/);

Снятие флага
Cout.unsetf(ios::/*имя флага*/);

cout.setf(ios::/*флаг1*/|ios::/*флаг2*/|ios::/*флаг3*/);
флаги:
1)  boolalpha-вывод логических велечин в текстовом виде
2)  oct-ввод/вывод в восьмеричной системе
    пример:
        cout.unsetf(ios::dec);
        cout.setf(ios::oct);
3)  dec-ввод/вывод в десятичной системе
4)  hex-ввод/вывод в шеснадцатеричной системе
5)  showebase-выводить индикатор основания системы счисления
6)  uppercase-вывод букв верхного регистра в шеснадцатеричной системе
7)  showpos-вывод знака плюс для положительных чисел
8)  scientific-вывод чисел с плавющей  точкой в экспоненнциальной форме
9)  fixed-вывод чисел с плавющей точкой в фиксированной форме
10) right-выравнивание по правой границе(по умолчанию)(необходимо установить ширину поля)
11) left-выравнивание по левой границе(по умолчанию)(необходимо установить ширину поля)

Манипуляторы-объект особого типа управляющий потоками ввода/вывода для форматирования передоваемые потоки информации.
setw,setfill,setprecision-необходимо Подключение библеотеки <iomanip>
1)  endl;-переход на новую строку при выводе
2)  boolalpha-вывод логических велечин в текстовом виде
3)  noboolalpha-вывод логических велечин в числовом виде
4)  oct-восьмеричной
5)  dec-(по умолчанию)десятичной
6)  hex-шеснадцатеричной
7)  showebase-показыает основание системы счисления
8)  noshowebase-не показыает основание системы счисления
9)  uppercase-верхний регистр
10) nouppercase-нижний регистр
11) showpos-
12) noshowpos
13) scientific
14) fixed
15) right
16) left
17) setw(/*ширина поля*/)
18) setprecision(/*количество знаков*/)
19) setfill(/*символ*/)

Пространства имен(namespace)-способ объединения логических связаных объявлений под общим именем.

namespace first;
{
    int a;
    float b;
}

namespace second
{
    int a;
    float b;
}


using namespace std;
int main()
{
    first::a=1;
    second::a=2;
    first::b=3.14;
    second::b=2.71;
    cout<<first::a<<endl;
    cout<<second::a<<endl;
    cout<<first::b<<endl;
    cout<<second::b<<endl;
    return 0;
}

псевдоним Пространства имен
namespace first_namespace
{
    int a,b;
}
namespace fn=first_namespace;

Пространства имен можно вкладывать друг в друга.