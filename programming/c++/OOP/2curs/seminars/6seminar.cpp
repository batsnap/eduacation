/*Семинар 5 
Создать базовый и производный класс Base и Derived, связанных полиморфно. 
Создать в базовом классе член-данных типа int*, а в производном – типа string и 
инициализировать их произвольно в конструкторе по умолчанию. 
Реализовать не входящий в иерархию класс базы данных DB, в в приватную область 
которого поместить член-данных типа vector < Base *> * и инициализировать его как надо. 
Добавить туда функцию add для добавления объектов во внутренний вектор. 
Добавить еще, что необходимо. 
В функции main создать два автоматических объекта типа DB: db1 и db2. 
В первое хранилище положить, используя функцию DB::add, (создавая на лету) по одному 
объекту базового и производного типа. 
А затем скопировать данные из первой db1 во вторую. 
Почистить ресурсы. 
Добрый день, высылаю задание на 5 семинар 
Решения отправляем на почту до 20:00*/
#include <vector>
#include <iostream>
#include <string>
using namespace std;

class Base
{
public:
	int*a;
	Base()
	{
		int *a;
		*a=10;
		this->a=a;
	};
	~Base()
	{
		delete a;
	};
	
};
class Derived:public Base
{
public:
	string a;
	Derived()
	{
		this->a="batyr";
	};
	~Derived(){};
	
};
class DB
{
private:
	vector<Base*> *v;
public:
	DB(){};
	~DB(){};
	void add()
	{
		
	}
};
int main()
{
	return 0;
}
