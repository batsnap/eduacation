# -*- coding: utf-8 -*-
"""
-------------------------------------------------
Задача C4-82.
Решение на языке Python 3.
 Автор: А. Жуков, 2018
-------------------------------------------------
82) (А. Жуков) В вход программы поступают N <= 1000 натуральных чисел,
каждое из которых не превышает 10000. Необходимо определить количество пар
элементов (ai, aj) этого набора, в которых 1 <= i < j  <= N, сумма элементов
нечётна, произведение делится на 13, , а номера чисел в последовательности 
отличаются менее, чем на 5. Напишите эффективную по времени и
по памяти программу для решения этой задачи.

Описание входных и выходных данных:
В первой строке входных данных задаётся количество чисел N (1 ≤ N ≤ 1000).
В каждой из последующих N строк записано одно натуральное число, не
превышающее 10000.
Пример входных данных:
7
4 
14
27
33
7
2
13
Пример выходных данных для приведённого выше примера входных данных:
1
В приведённом наборе из 7 чисел имеется одна пара (2, 13), сумма 
элементов которой нечётна, произведение кратно 13, и номера 
элементов в паре отличаются менее, чем на 5.
"""
import sys
save_stdin = sys.stdin
sys.stdin = open("in/82.in")

D = 5
n = int(input())
queue = []
k = k26 = k13 = k2 = k1 = 0
for i in range(D):
  x = int(input())
  queue.append(x)
  if x % 13 == 0:
    if x % 2 == 0:
      k, k26, k2 = k+k1, k26+1, k2+1 
    else:
      k, k13, k1 = k+k2, k13+1, k1+1 
  elif x % 2 == 0:
    k, k2 = k+k13, k2+1
  else:
    k, k1 = k+k26, k1+1
for i in range(D,n):
  # элемент удаляется из очереди
  if queue[i % D] % 13 == 0:
    if queue[i % D] % 2 == 0:
      k26, k2 = k26-1, k2-1 
    else:
      k13, k1 = k13-1, k1-1 
  elif queue[i % D] % 2 == 0:
    k2 -= 1
  else:
    k1 -= 1
  # вводим элемент
  x = int(input())
  if x % 13 == 0:
    if x % 2 == 0:
      k += k1
      k26, k2 = k26+1, k2+1 
    else:
      k += k2
      k13, k1 = k13+1, k1+1 
  elif x % 2 == 0:
    k, k2 = k+k13, k2+1
  else:
    k, k1 = k+k26, k1+1
  queue[i % D] = x
print(k)

sys.stdin = save_stdin