# -*- coding: utf-8 -*-
"""
-------------------------------------------------
Задача C4-93.
Решение на языке Python 3.
-------------------------------------------------
93) (В.Н. Бабий, Челябинск) На вход программы поступает последовательность из N натуральных чисел. Рассматриваются все пары различных элементов последовательности (элементы пары не обязательно должны стоять в последовательности рядом, порядок в паре неважен). Необходимо определить количество пар, для которых произведение элементов заканчивается на 3, а номера чисел в последовательности отличаются не менее, чем на 6.
Описание входных и выходных данных
В первой строке входных данных задается количество чисел N (7 ≤ N ≤ 10000). В каждой из последующих N строк записано одно целое положительное число, не превышающее 1000.
В качестве ответа программа должна вывести одно число: количество пар, в которых произведение элементов заканчивается на 3, а номера чисел в последовательности отличаются не менее, чем на 6.
Пример входных данных:
10
17
11
15
24
36
47
13
9
44
53
Пример выходных данных для приведенного выше примера входных данных:
2
"""
import sys
save_stdin = sys.stdin
sys.stdin = open("in/93.in")

d = 6
a = [0]*(d+1)

n = int(input())
for i in range(d):
  a[i] = int(input())
k1 = k3 = k7 = k9 = R = 0;

for i in range(d,n):
  a[d] = int(input())
  if a[0] % 10 == 1: k1 += 1
  if a[0] % 10 == 3: k3 += 1
  if a[0] % 10 == 7: k7 += 1
  if a[0] % 10 == 9: k9 += 1
  if a[d] % 10 == 1: R += k3
  if a[d] % 10 == 3: R += k1
  if a[d] % 10 == 7: R += k9
  if a[d] % 10 == 9: R += k7
  for j in range(d):
    a[j] = a[j+1]

print(R)

sys.stdin = save_stdin